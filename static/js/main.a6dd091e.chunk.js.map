{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGE_ID","appId","authService","initializeApp","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","passwordConf","setPasswordConf","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Box","sx","marginTop","paddingBottom","display","flexDirection","alignItems","noValidate","component","Grid","width","maxWidth","Typography","align","item","m","my","TextField","fullWidth","label","required","type","helperText","Button","variant","color","onClick","prev","Alert","severity","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Container","startIcon","style","backgroundColor","Nweet","nweetObj","isOwner","console","log","setEditing","text","newNweet","setNewNweet","NweetModify","setNweetModify","onDeleteClick","useConfirm","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","updateDoc","ModalSetOpen","React","ModalOpen","ModalHandleClose","ModifyOpener","Boolean","Modal","open","onClose","position","left","top","transform","Paper","Stack","py","direction","justifyContent","minHeight","placeholder","multiline","rows","inputProps","maxLength","spacing","Card","CardHeader","action","IconButton","size","undefined","currentTarget","fontSize","Menu","anchorEl","MenuItem","avatar","Avatar","src","creatorImg","Nickname","substr","title","creatorId","titleTypographyProps","subheader","moment","createdAt","format","subheaderTypographyProps","CardMedia","height","image","CardContent","NweetFactory","userObj","snackbar","nweet","setNweet","attachment","setAttachment","e","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","Date","now","displayName","photoURL","addDoc","collection","docRef","SnackHandleClick","setOpenSnack","SnackHandleClose","reason","Fragment","container","borderRadius","boxShadow","AddPhotoAlternate","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","hidden","Snackbar","autoHideDuration","Home","nweets","setNweets","useEffect","onSnapshot","query","orderBy","snapshot","nweetArray","docs","map","data","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","getDocs","forEach","updateProfile","currentUser","ProfileModify","signOut","push","pt","pb","textAlign","Navigation","flexGrow","AppBar","xs","href","endIcon","length","substring","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","mt","justify","CircularProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6dd091e.chunk.js","sourcesContent":["import { initializeApp, firebase } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGE_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\n// export const firebaseInstance = firebase;\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import { authService } from \"fbase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport { TextField } from \"@mui/material\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport Alert from \"@mui/material/Alert\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConf, setPasswordConf] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState(\"\");\n  const pwdMsg = \"\";\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        if (password !== passwordConf) {\n          return setError(\"비밀번호 확인란이 잘못 됐습니다.\");\n        }\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n      } else {\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      // console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <Box\n        sx={{\n          marginTop: 1,\n          paddingBottom: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n        noValidate\n        component=\"form\"\n        onSubmit={onSubmit}\n      >\n        <Grid width=\"100%\" maxWidth=\"500px\">\n          <Typography align=\"center\">NWITTER</Typography>\n          <Grid item sx={{ m: 1, my: 1.5 }}>\n            <TextField\n              fullWidth\n              label=\"이메일\"\n              name=\"email\"\n              value={email}\n              onChange={onChange}\n              required\n            />\n          </Grid>\n          <Grid item sx={{ m: 1, my: 1.5 }}>\n            <TextField\n              fullWidth\n              label=\"비밀번호\"\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={onChange}\n              required\n            />\n          </Grid>\n          {newAccount ? (\n            <Grid item sx={{ m: 1, my: 1.5 }}>\n              <TextField\n                fullWidth\n                label=\"비밀번호 확인\"\n                name=\"passwordConf\"\n                type=\"password\"\n                helperText={pwdMsg}\n                value={passwordConf}\n                onChange={(event) => {\n                  const {\n                    target: { name, value },\n                  } = event;\n                  if (name === \"passwordConf\") {\n                    setPasswordConf(value);\n                  }\n                }}\n                required\n              />\n            </Grid>\n          ) : (\n            \"\"\n          )}\n          <Grid item sx={{ m: 1, my: 2 }}>\n            <Button fullWidth type=\"submit\" variant=\"contained\" color=\"primary\">\n              {newAccount ? \"계정 생성\" : \"로그인\"}\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n      <Grid\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            toggleAccount();\n          }}\n        >\n          {newAccount ? \"로그인\" : \"계정 생성\"}\n        </Button>\n      </Grid>\n      {error ? <Alert severity=\"error\">{error}</Alert> : \"\"}\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { authService } from \"fbase\";\nimport {\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport { Button } from \"@material-ui/core\";\nimport GoogleIcon from \"@mui/icons-material/Google\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (name) => {\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n    }\n    const data = await signInWithPopup(authService, provider);\n    // console.log(data);\n  };\n  return (\n    <Container>\n      <AuthForm />\n      <Box\n        sx={{\n          my: 2,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Grid width=\"100%\" maxWidth=\"500px\">\n          <Grid item sx={{ m: 1, my: 2 }}>\n            <Button\n              fullWidth\n              startIcon={<GoogleIcon />}\n              variant=\"outlined\"\n              onClick={() => {\n                onSocialClick(\"google\");\n              }}\n            >\n              Google 계정으로 시작\n            </Button>\n          </Grid>\n          <Grid item sx={{ m: 1, my: 2 }}>\n            <Button\n              fullWidth\n              startIcon={<GitHubIcon />}\n              variant=\"contained\"\n              onClick={() => {\n                onSocialClick(\"github\");\n              }}\n              style={{ backgroundColor: \"#222\", color: \"#fff\" }}\n            >\n              Github 계정으로 시작\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Auth;\n","import {\n  Avatar,\n  Button,\n  CardContent,\n  CardMedia,\n  Container,\n  IconButton,\n  Menu,\n  MenuItem,\n  Modal,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { Card, CardHeader, Stack } from \"@mui/material\";\nimport { dbService } from \"fbase\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport React, { useState } from \"react\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { deleteObject, ref } from \"@firebase/storage\";\nimport { storageService } from \"../fbase\";\nimport { useConfirm } from \"material-ui-confirm\";\nimport moment from \"moment\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  console.log(nweetObj);\n  // console.log(\"isOwner :\", isOwner);\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const [NweetModify, setNweetModify] = useState(null);\n\n  const confirm = useConfirm();\n  const onDeleteClick = async () => {\n    // confirm({ description: `이 항목을 삭제하실건가요?` })\n    //   .then(() => console.log(\"삭제하죠.\"))\n    //   .catch(() => console.log(\"Deletion cancelled.\"));\n    setNweetModify(null);\n    const ok = window.confirm(\"이 Nweet을 삭제 할건가요?\");\n\n    // console.log(ok);\n    if (ok) {\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`), {});\n      if (nweetObj.attachmentUrl) {\n        await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n      }\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\n      text: newNweet,\n    });\n    setEditing(false);\n    ModalSetOpen(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  const [ModalOpen, ModalSetOpen] = React.useState(false);\n  const ModalHandleOpen = () => {\n    ModalSetOpen(true);\n    setNweetModify(null);\n  };\n  const ModalHandleClose = () => ModalSetOpen(false);\n\n  const ModifyOpener = Boolean(NweetModify);\n  const ModifyOpen = (event) => {\n    setNweetModify(event.currentTarget);\n  };\n  const ModifyClose = () => {\n    setNweetModify(null);\n  };\n\n  return (\n    <div key={nweetObj.id}>\n      <>\n        {isOwner && (\n          <Modal open={ModalOpen} onClose={ModalHandleClose}>\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <Paper>\n                <Container>\n                  <Stack\n                    noValidate\n                    component=\"form\"\n                    onSubmit={onSubmit}\n                    sx={{ py: 6 }}\n                    direction=\"column\"\n                    justifyContent=\"center\"\n                    style={{ minHeight: \"30vh\" }}\n                  >\n                    <Typography variant=\"h5\" align=\"center\">\n                      수정하기\n                    </Typography>\n                    <TextField\n                      value={newNweet}\n                      onChange={onChange}\n                      placeholder=\"Nweet 수정\"\n                      label=\"Nweet 수정\"\n                      multiline\n                      rows={4}\n                      inputProps={{\n                        maxLength: 120,\n                      }}\n                      required\n                      fullWidth\n                    />\n                    <Stack\n                      direction=\"row\"\n                      justifyContent=\"flex-end\"\n                      spacing={2}\n                      sx={{ py: 2 }}\n                    >\n                      <Button onClick={ModalHandleClose}>취소</Button>\n                      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        저장\n                      </Button>\n                    </Stack>\n                  </Stack>\n                </Container>\n              </Paper>\n              {/* <button onClick={toggleEditing}>Cancel</button> */}\n            </Container>\n          </Modal>\n        )}\n      </>\n      <Card variant=\"outlined\" sx={{ my: 4 }}>\n        <CardHeader\n          // avatar={nweetObj.id}\n          action={\n            <>\n              {isOwner && (\n                <>\n                  <IconButton\n                    size=\"small\"\n                    aria-controls=\"basic-menu\"\n                    aria-haspopup=\"true\"\n                    aria-expanded={ModifyOpener ? \"true\" : undefined}\n                    onClick={ModifyOpen}\n                  >\n                    <MoreHorizIcon fontSize=\"small\" />\n                  </IconButton>\n                  <Menu\n                    anchorEl={NweetModify}\n                    open={ModifyOpener}\n                    onClose={ModifyClose}\n                  >\n                    <MenuItem onClick={ModalHandleOpen}>수정</MenuItem>\n                    <MenuItem onClick={onDeleteClick}>삭제</MenuItem>\n                  </Menu>\n                </>\n              )}\n            </>\n          }\n          avatar={\n            <Avatar aria-label=\"nweet\" src={nweetObj.creatorImg}>\n              {nweetObj.Nickname.substr(0, 1)}\n            </Avatar>\n          }\n          title={nweetObj.Nickname ? nweetObj.Nickname : nweetObj.creatorId}\n          titleTypographyProps={{\n            fontSize: \"17px\",\n          }}\n          subheader={moment(nweetObj.createdAt).format(\"YYYY.MM.DD HH:mm\")}\n          subheaderTypographyProps={{\n            fontSize: \"13px\",\n          }}\n        />\n        {nweetObj.attachmentUrl && (\n          // <img src={} width=\"50px\" height=\"50px\" />\n          <CardMedia\n            component=\"img\"\n            // height=\"256\"\n            height=\"256\"\n            image={nweetObj.attachmentUrl}\n          />\n        )}\n        <CardContent>\n          <Typography>{nweetObj.text}</Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Nweet;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ref, uploadString, getDownloadURL } from \"@firebase/storage\";\nimport { AddPhotoAlternate } from \"@mui/icons-material\";\nimport { TextField, Grid } from \"@mui/material\";\nimport { Button, IconButton } from \"@material-ui/core\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { Box } from \"@mui/system\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst NweetFactory = ({ userObj, snackbar }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    //첨부파일 없을 때\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      // console.log(\"response: \", response.ref);\n      // console.log(await getDownloadURL(ref(response)));\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      Nickname: userObj.displayName,\n      attachmentUrl,\n      creatorImg: userObj.photoURL,\n    };\n\n    try {\n      const docRef = await addDoc(collection(dbService, \"nweets\"), nweetObj);\n      console.log(\"Document written with ID: \", docRef.id);\n      SnackHandleClick();\n    } catch (error) {\n      console.error(\"Error adding document: \", error);\n    }\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = ({ target: { value } }) => {\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n\n  // 스낵바\n  const [open, setOpenSnack] = React.useState(false);\n  const [snackPack, setSnackPack] = React.useState([]);\n\n  const SnackHandleClick = () => {\n    setOpenSnack(true);\n  };\n\n  const SnackHandleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnack(false);\n  };\n  const action = (\n    <React.Fragment>\n      {/* <Button color=\"secondary\" size=\"small\" onClick={SnackHandleClose}>\n        UNDO\n      </Button> */}\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={SnackHandleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  return (\n    <>\n      <Box component=\"form\" onSubmit={onSubmit}>\n        <TextField\n          value={nweet}\n          label=\"nweet 쓰기\"\n          multiline\n          rows={4}\n          placeholder=\"무슨일이야?\"\n          onChange={onChange}\n          fullWidth\n          inputProps={{\n            maxLength: 20,\n          }}\n          required\n        />\n        <Grid\n          py=\"1\"\n          container\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"flex-end\"\n          item\n          sx={{\n            my: 2,\n          }}\n        >\n          <div\n            style={{\n              height: \"60px\",\n            }}\n          >\n            {attachment ? (\n              <>\n                <img\n                  src={\n                    attachment\n                      ? attachment\n                      : \"https://firebasestorage.googleapis.com/v0/b/nwitter-a4d3b.appspot.com/o/default_image.png?alt=media&token=d33ee8b0-a5ed-4876-9fbc-65282d55f00b\"\n                  }\n                  width=\"60px\"\n                  height=\"60px\"\n                  style={{\n                    backgroundColor: \"#ddd\",\n                    borderRadius: \"4px\",\n                  }}\n                />\n                <IconButton\n                  onClick={onClearAttachment}\n                  size=\"small\"\n                  style={{\n                    position: \"absolute\",\n                    transform: \"translate(-17px, -12px)\",\n                    backgroundColor: \"#fbfbfb\",\n                    boxShadow: \"1px 2px 4px #00000054\",\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </>\n            ) : (\n              <Button\n                variant=\"contained\"\n                component=\"label\"\n                style={{\n                  backgroundColor: \"#fbfbfb\",\n                  width: \"60px\",\n                  height: \"60px\",\n                }}\n              >\n                <AddPhotoAlternate\n                  fontSize=\"large\"\n                  // style={{ color: \"white\" }}\n                />\n                <input\n                  accept=\"image/*\"\n                  type=\"file\"\n                  onChange={onFileChange}\n                  hidden\n                />\n              </Button>\n            )}\n          </div>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Nweet\n          </Button>\n        </Grid>\n      </Box>\n      <Snackbar\n        open={open}\n        autoHideDuration={3000}\n        onClose={SnackHandleClose}\n        message=\"👍 성공적으로 작성되었습니다.\"\n        action={action}\n      />\n    </>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { collection, onSnapshot, query, orderBy } from \"firebase/firestore\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport { Box } from \"@mui/system\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    onSnapshot(\n      query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\")),\n      (snapshot) => {\n        const nweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNweets(nweetArray);\n      }\n    );\n  }, []);\n\n  return (\n    <>\n      <NweetFactory userObj={userObj} />\n      <>\n        {nweets.map((nweet) => (\n          <Box minHeight=\"50px\">\n            <Nweet\n              key={nweet.id}\n              nweetObj={nweet}\n              isOwner={nweet.creatorId === userObj.uid}\n            />\n          </Box>\n        ))}\n      </>\n    </>\n  );\n};\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  collection,\n  getDocs,\n  query,\n  where,\n  onSnapshot,\n  orderBy,\n} from \"@firebase/firestore\";\nimport { updateProfile } from \"@firebase/auth\";\nimport { Box } from \"@mui/system\";\nimport Nweet from \"components/Nweet\";\nimport {\n  Typography,\n  Modal,\n  Container,\n  Paper,\n  TextField,\n} from \"@material-ui/core\";\nimport { Button, Stack } from \"@mui/material\";\n\nexport default ({ refreshUser, userObj }) => {\n  console.log(\"userObj : \", userObj);\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [profileIMG, setProfileIMG] = useState(userObj.photoURL);\n  const [nweets, setNweets] = useState([]);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n    refreshUser();\n  };\n  const getMyNweets = async () => {\n    const nweets = query(\n      collection(dbService, \"nweets\"),\n      where(\"creatorId\", \"==\", userObj.uid)\n    );\n    const querySnapshot = await getDocs(nweets);\n    querySnapshot.forEach((doc) => {\n      // console.log(doc.id, \" => \", doc.data().creatorId);\n    });\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(await authService.currentUser, {\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n    ModalSetOpen(false);\n  };\n  useEffect(() => {\n    getMyNweets();\n    onSnapshot(\n      query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\")),\n      (snapshot) => {\n        const nweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNweets(nweetArray);\n      }\n    );\n  }, []);\n\n  const [ProfileModify, setProfileModify] = useState(null);\n  const [ModalOpen, ModalSetOpen] = React.useState(false);\n  const ModalHandleOpen = () => {\n    ModalSetOpen(true);\n  };\n  const ModalHandleClose = () => ModalSetOpen(false);\n\n  const ModifyOpener = Boolean(ProfileModify);\n  const ModifyOpen = (event) => {\n    setProfileModify(event.currentTarget);\n  };\n  const ModifyClose = () => {\n    setProfileModify(null);\n  };\n\n  return (\n    <>\n      <Modal open={ModalOpen} onClose={ModalHandleClose}>\n        <Container\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <Paper>\n            <Container>\n              <Stack\n                noValidate\n                component=\"form\"\n                onSubmit={onSubmit}\n                sx={{ py: 6 }}\n                direction=\"column\"\n                justifyContent=\"center\"\n                style={{ minHeight: \"30vh\" }}\n              >\n                <Typography variant=\"h5\" align=\"center\">\n                  프로필 수정\n                </Typography>\n                <TextField\n                  value={newDisplayName}\n                  onChange={onChange}\n                  placeholder=\"닉네임 수정\"\n                  label=\"닉네임 수정\"\n                  inputProps={{\n                    maxLength: 120,\n                  }}\n                  fullWidth\n                />\n                <Stack\n                  direction=\"row\"\n                  justifyContent=\"flex-end\"\n                  spacing={2}\n                  sx={{ py: 2 }}\n                >\n                  <Button onClick={ModalHandleClose}>취소</Button>\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    저장\n                  </Button>\n                </Stack>\n              </Stack>\n            </Container>\n          </Paper>\n          {/* <button onClick={toggleEditing}>Cancel</button> */}\n        </Container>\n      </Modal>\n      <Button fullWidth onClick={ModalHandleOpen}>\n        프로필 수정\n      </Button>\n      <Button fullWidth onClick={onLogOutClick} color=\"error\">\n        로그아웃\n      </Button>\n      {/* <img\n        src={userObj.photoURL}\n        // width=\"1em\"\n        // height=\"1em\"\n        style={{\n          width: \"150px\",\n          height: \"150px\",\n          // fontSize: \"1.5em\",\n          borderRadius: \"50%\",\n        }}\n      /> */}\n      <Box sx={{ pt: 3, pb: 2, textAlign: \"center\" }}>\n        <Typography variant=\"h3\">My nweets</Typography>\n      </Box>\n      {nweets.map((nweet) => (\n        <>\n          <Box minHeight=\"50px\">\n            {nweet.creatorId === userObj.uid ? (\n              <Nweet\n                key={nweet.id}\n                nweetObj={nweet}\n                isOwner={nweet.creatorId === userObj.uid}\n              />\n            ) : (\n              \"\"\n            )}\n          </Box>\n        </>\n      ))}\n    </>\n  );\n};\n\n// export default Profile;\n","import React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport { Box } from \"@mui/system\";\nimport {\n  Avatar,\n  Button,\n  Container,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport Grid from \"@mui/material/Grid\";\nimport HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\n\nconst Navigation = ({ userObj }) => (\n  <Box sx={{ flexGrow: 1 }}>\n    <AppBar position=\"fixed\">\n      <Container>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item xs>\n            <IconButton color=\"inherit\" aria-label=\"home\" href=\"/Nwitter\">\n              <HomeRoundedIcon />\n            </IconButton>\n          </Grid>\n          <Grid item xs={6} justifyContent=\"center\">\n            <Typography style={{ textAlign: \"center\" }}>NWITTER</Typography>\n          </Grid>\n          <Grid item xs>\n            <Box>\n              <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"flex-end\"\n                alignItems=\"center\"\n              >\n                <Button\n                  href=\"/Nwitter/#/profile\"\n                  variant=\"text\"\n                  style={{ color: \"#fff\" }}\n                  endIcon={\n                    userObj.photoURL ? (\n                      <img\n                        src={userObj.photoURL}\n                        // width=\"1em\"\n                        // height=\"1em\"\n                        style={{\n                          width: \"1em\",\n                          height: \"1em\",\n                          fontSize: \"1.5em\",\n                          borderRadius: \"50%\",\n                        }}\n                      />\n                    ) : (\n                      // <AccountCircleIcon />\n                      <AccountCircleIcon />\n                    )\n                  }\n                >\n                  {userObj.displayName\n                    ? userObj.displayName.length <= 6\n                      ? userObj.displayName\n                      : userObj.displayName.substring(0, 6) + \"...\"\n                    : \"User\"}\n                  {/* {console.log(userObj)} */}\n                </Button>\n              </Grid>\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </AppBar>\n  </Box>\n);\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\nimport { Box } from \"@mui/system\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && (\n        <Box>\n          <Navigation userObj={userObj} />\n        </Box>\n      )}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { CircularProgress, Container, Grid } from \"@material-ui/core\";\nimport { Box } from \"@mui/system\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          photoURL: user.photoURL,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL,\n      // updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <Container>\n      <Box sx={{ height: \"100%\", minHeight: \"550px\" }}>\n        {init ? (\n          <Box sx={{ mt: 12 }}>\n            <AppRouter\n              refreshUser={refreshUser}\n              isLoggedIn={Boolean(userObj)}\n              userObj={userObj}\n            />\n          </Box>\n        ) : (\n          <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: \"100vh\" }}\n          >\n            <Grid item xs={6}>\n              <CircularProgress size={80}></CircularProgress>\n            </Grid>\n          </Grid>\n        )}\n      </Box>\n      {/* <Box\n        sx={{\n          height: \"10%\",\n          bgcolor: \"#e9f3fd\",\n          py: 1,\n          px: 1,\n          borderRadius: \"15px\",\n        }}\n      >\n        <Grid\n          container\n          direction=\"row\"\n          alignItems=\"center\"\n          justify=\"flex-start\"\n        >\n          <Grid item>\n            <Box sx={{ fontWeight: \"light\" }}>\n              &copy; {new Date().getFullYear()} Nwitter\n            </Box>\n          </Grid>\n        </Grid>\n      </Box> */}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}